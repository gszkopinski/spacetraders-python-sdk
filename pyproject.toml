[tool.poetry]
name = "spacetraders-python-sdk"
version = "0.0.0"
description = "SpaceTraders API Python SDK"
authors = ["gszkopinski <gszkopinski@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = { version = "^2.8.2", extras = ["email"] }
requests = "^2.32.3"
python-dotenv = "^1.0.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
mypy = "^1.11.1"
black = "^24.4.2"
pytest-cov = "^5.0.0"
pre-commit = "^3.8.0"
mock = "^5.1.0"
icecream = "^2.1.3"
flake8 = "^7.1.0"
flake8-pyproject = "^1.2.3"
ipdb = "^0.13.13"
types-requests = "^2.32.0.20240712"
types-mock = "^5.1.0.20240425"
pytest-xdist = "^3.6.1"
python-semantic-release = "^9.8.6"
autopep8 = "^2.3.1"
pydocstyle = "^6.3.0"
pycodestyle = "^2.12.0"
pylint = "^3.2.6"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# TOOLS
[tool.flake8]
# ignore = ['E231', 'E241']
# per-file-ignores = [
#     '__init__.py:F401',
# ]
max-line-length = 120
count = true


[tool.isort]
profile = "black"
force_single_line = false
atomic = false
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
filter_files = true
known_first_party = "poetry"


[tool.black]
line-length = 120
target-version = ["py37", "py38", "py39"]


[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_source = "tag"
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "poetry build"
commit_version_number = true
commit_subject = "chore(release): v{version}"
commit_message = "Released version {version}. See the changelog for changes."


[tool.mypy]
ignore_missing_imports = true
disable_error_code = ["call-arg"]


[tool.pylint.messages_control]
max-line-length = 120
extension-pkg-whitelist = "pydantic"

disable = [
    "no-member",
    "too-few-public-methods",
    "duplicate-code",
    "protected-access",
    "broad-except",
    "fixme",
    "too-many-instance-attributes",
    "broad-exception-raised",
    "too-many-arguments",
    "too-many-return-statements",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -s --log-cli-level=INFO"
testpaths = ["tests"]


[tool.pyright]
reportMissingTypeStubs = false
reportUnknownMemberType = false
reportFunctionMemberAccess = false
reportGeneralTypeIssues = false
reportPrivateUsage = false
reportUntypedFunctionDecorator = false
reportShadowedImports = false
reportUnknownVariableType = false
